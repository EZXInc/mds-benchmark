package perf;

import org.junit.Test;

import com.eztech.middleware.net.SocketMessageObject;
import com.eztech.providers.currenex.marketdata.CurrenexMarketDataIncrementalRefreshMessage;
import com.eztech.providers.jpm.marketdata.JPMMarketDataIncrementalRefreshMessage;
import com.eztech.providers.msdw.quote.MSDWQuoteMessage;
import com.google.caliper.BeforeExperiment;
import com.google.caliper.Benchmark;
import com.google.caliper.api.BeforeRep;

import static org.junit.Assert.assertEquals;

public class QuoteDecodeBenchmark {
	
	/*
	 * Should be able to find some in /ezxdata/mktsimu/MarketDataDump.txt on goral-dev.

Here are a few messages:

=8=FIX.4.2\0019=1225\00135=X\00134=2\00149=JPM-UAT-MD\00152=20110210-17:32:35.414\00156=EZXINC\001262=SP_0_e2a6b3e1_20110210_EUR/USD\001268=10\001279=0\001269=1\001278=28845\00155=EUR/USD\001270=1.36247\00115=EUR\001271=10000000\001126=20110210-17:32:58.456\001290=3\0019006=2011-02-14\001279=0\001269=1\001278=28846\00155=EUR/USD\001270=1.36252\00115=EUR\001271=15000000\001126=20110210-17:32:58.456\001290=4\0019006=2011-02-14\001279=0\001269=1\001278=28843\00155=EUR/USD\001270=1.36235\00115=EUR\001271=500000\001126=20110210-17:32:58.456\001290=1\0019006=2011-02-14\001279=0\001269=0\001278=28840\00155=EUR/USD\001270=1.36212\00115=EUR\001271=10000000\001126=20110210-17:32:58.448\001290=3\0019006=2011-02-14\001279=0\001269=1\001278=28844\00155=EUR/USD\001270=1.36242\00115=EUR\001271=5000000\001126=20110210-17:32:58.456\001290=2\0019006=2011-02-14\001279=0\001269=0\001278=28838\00155=EUR/USD\001270=1.36225\00115=EUR\001271=500000\001126=20110210-17:32:58.448\001290=1\0019006=2011-02-14\001279=0\001269=0\001278=28841\00155=EUR/USD\001270=1.36208\00115=EUR\001271=15000000\001126=20110210-17:32:58.448\001290=4\0019006=2011-02-14\001279=0\001269=1\001278=28847\00155=EUR/USD\001270=1.36256\00115=EUR\001271=20000000\001126=20110210-17:32:58.456\001290=5\0019006=2011-02-14\001279=0\001269=0\001278=28842\00155=EUR/USD\001270=1.36203\00115=EUR\001271=20000000\001126=20110210-17:32:58.448\001290=5\0019006=2011-02-14\001279=0\001269=0\001278=28839\00155=EUR/USD\001270=1.36218\00115=EUR\001271=5000000\001126=20110210-17:32:58.448\001290=2\0019006=2011-02-14\00110=208\001

8=FIX.4.2\0019=660\00135=X\00134=80\00149=JPM-UAT-MD\00152=20110210-17:33:09.475\00156=EZXINC\001262=SP_6_45da928d_20110210_EUR/CHF\001268=5\001279=1\001269=0\001278=37084\00155=EUR/CHF\001270=1.3184\00115=EUR\001271=500000\001126=20110210-17:33:39.352\001290=1\0019006=2011-02-14\001279=1\001269=0\001278=37085\00155=EUR/CHF\001270=1.3184\00115=EUR\001271=2000000\001126=20110210-17:33:39.352\001290=2\0019006=2011-02-14\001279=1\001269=0\001278=37086\00155=EUR/CHF\001270=1.31834\00115=EUR\001271=5000000\001126=20110210-17:33:39.352\001290=3\0019006=2011-02-14\001279=1\001269=0\001278=37087\00155=EUR/CHF\001270=1.31827\00115=EUR\001271=10000000\001126=20110210-17:33:39.352\001290=4\0019006=2011-02-14\001279=1\001269=0\001278=37088\00155=EUR/CHF\001270=1.31821\00115=EUR\001271=15000000\001126=20110210-17:33:39.352\001290=5\0019006=2011-02-14\00110=106\001

FIXEngine[ENGINE2]: INFO : fxall-fx-mkt processMsg(fixID=fxall-fx-mkt): recvMS=1297364200446, read msg=8=FIX.4.3\0019=159\00135=X\00149=FXALL\00156=GORALTEST-MDS-1\00134=234253\00152=20110210-18:56:40.390\001262=SP_60_6fa3c775_20110210_EUR/JPY\00155=EUR/JPY\001268=1\001279=2\001269=0\001278=1297364201138\00164=SPOT\00110=068\001

Hotspot:
FIXEngine[ENGINE2]: INFO : hotspot-fx-mkt processItchMessage(fixID=hotspot-fx-mkt): recvMS=1297364197187, read msg=S135637158NSEUR/JPY5645885        113.270   8000000         0               0


FIXEngine[ENGINE2]: INFO : currenex-fx-mkt processMsg(fixID=currenex-fx-mkt): recvMS=1297364189685, read msg=8=FIX.4.2\0019=494\00135=X\00134=10152\00149=CNX\00152=20110210-18:56:29.662\00156=ezxfst\001262=SP_28_c1cb67d2_20110210_GBP/USD\001268=7\001279=0\001269=0\001278=79704\00155=GBP/USD\001270=1.6110\00115=GBP\001271=3000000\001346=1\001279=0\001269=0\001278=72160\00155=GBP/USD\001270=1.6111\00115=GBP\001271=1000000\001346=1\001279=2\001269=0\001278=72086\00155=GBP/USD\00115=GBP\001279=0\001269=1\001278=71943\00155=GBP/USD\001270=1.6115\00115=GBP\001271=3000000\001346=1\001279=2\001269=1\001278=71091\00155=GBP/USD\00115=GBP\001279=0\001269=1\001278=71967\00155=GBP/USD\001270=1.6114\00115=GBP\001271=1000000\001346=1\001279=2\001269=1\001278=71927\00155=GBP/USD\00115=GBP\00110=146\001

v
	 */
	
	
	
	//private 
	
	public static final String QUOTE_MESSAGE = "8=FIX.4.2\0019=1225\00135=X\00134=2\00149=JPM-UAT-MD\00152=20110210-17:32:35.414\00156=EZXINC\001262=SP_0_e2a6b3e1_20110210_EUR/USD\001268=10\001279=0\001269=1\001278=28845\00155=EUR/USD\001270=1.36247\00115=EUR\001271=10000000\001126=20110210-17:32:58.456\001290=3\0019006=2011-02-14\001279=0\001269=1\001278=28846\00155=EUR/USD\001270=1.36252\00115=EUR\001271=15000000\001126=20110210-17:32:58.456\001290=4\0019006=2011-02-14\001279=0\001269=1\001278=28843\00155=EUR/USD\001270=1.36235\00115=EUR\001271=500000\001126=20110210-17:32:58.456\001290=1\0019006=2011-02-14\001279=0\001269=0\001278=28840\00155=EUR/USD\001270=1.36212\00115=EUR\001271=10000000\001126=20110210-17:32:58.448\001290=3\0019006=2011-02-14\001279=0\001269=1\001278=28844\00155=EUR/USD\001270=1.36242\00115=EUR\001271=5000000\001126=20110210-17:32:58.456\001290=2\0019006=2011-02-14\001279=0\001269=0\001278=28838\00155=EUR/USD\001270=1.36225\00115=EUR\001271=500000\001126=20110210-17:32:58.448\001290=1\0019006=2011-02-14\001279=0\001269=0\001278=28841\00155=EUR/USD\001270=1.36208\00115=EUR\001271=15000000\001126=20110210-17:32:58.448\001290=4\0019006=2011-02-14\001279=0\001269=1\001278=28847\00155=EUR/USD\001270=1.36256\00115=EUR\001271=20000000\001126=20110210-17:32:58.456\001290=5\0019006=2011-02-14\001279=0\001269=0\001278=28842\00155=EUR/USD\001270=1.36203\00115=EUR\001271=20000000\001126=20110210-17:32:58.448\001290=5\0019006=2011-02-14\001279=0\001269=0\001278=28839\00155=EUR/USD\001270=1.36218\00115=EUR\001271=5000000\001126=20110210-17:32:58.448\001290=2\0019006=2011-02-14\00110=208\001";
	public static final byte[] QUOTE_MESSAGE_BYTES = QUOTE_MESSAGE.getBytes();
	
	public static final String FX_ALL_SHORT_MESSAGE = "8=FIX.4.3\0019=159\00135=X\00149=FXALL\00156=GORALTEST-MDS-1\00134=234253\00152=20110210-18:56:40.390\001262=SP_60_6fa3c775_20110210_EUR/JPY\00155=EUR/JPY\001268=1\001279=2\001269=0\001278=1297364201138\00164=SPOT\00110=068\001";
	public static final byte[] FX_ALL_BYTES = FX_ALL_SHORT_MESSAGE.getBytes();
	 
	
	public static final String CURRENEX_MESSAGE = "30006=currenex-fx-mkt30007=386391830017=138962874169530019=130020=18=FIX.4.29=16935=X34=31974649=CNX52=20140113-15:59:01.67056=ezxfst262=SP_55_4e4de5f0_20140112_EUR/GBP268=1279=0269=0278=3987355=EUR/GBP282=NA270=0.833215=EUR271=100000010=233";
	public static final byte[] CURRENEX_BYTES = CURRENEX_MESSAGE.getBytes();
	
	public static final String MSDW_MESSAGE = "30006=msdw-fx-mkt30007=386392130017=138962874171430019=130020=28=FIX.4.29=024535=S49=MSFX56=GORALRATEQA34=23846252=20140113-15:59:01.583115=FIXTEST1142=NY117=d5843s1640255=USD/CAD132=1.0863133=1.0865134=1000000135=1000000131=SP_4_57a28f9e_20140112_USD/CAD60=20140113-15:59:01.57463=064=20140114303=2537=010=161";
	public static final byte[] MSDW_BYTES = MSDW_MESSAGE.getBytes();
		
	public static final String JPM_MESSAGE = "30006=jpm-fx-mkt30007=386392330017=138962874172630019=130020=28=FIX.4.29=23735=X49=JPM-UAT-MD56=EZXINC34=19117752=20140113-15:59:01.694262=SP_3_0c9fc6a6_20140112_AUD/USD268=1279=1269=0278=6299755=AUD/USD107=SPOT270=0.905815=AUD271=2000000126=20140113-15:59:31.685290=19006=2014-01-159050=0.905910=172";
	public static final byte[] JPM_BYTES = JPM_MESSAGE.getBytes();
		
	private JPMMarketDataIncrementalRefreshMessage jpmMessage;
	private SocketMessageObject jpmSocketMessage;
	
	private CurrenexMarketDataIncrementalRefreshMessage currenexMessage;
	private SocketMessageObject currenexSocketMessage;
	
	private MSDWQuoteMessage msdwQuoteMessage;
	private SocketMessageObject msdwSocketMessage;
		
	
	public QuoteDecodeBenchmark() {
		
	}
	
	@Test
	public void testDecodeIsWorking() {
		jpmMessage = new JPMMarketDataIncrementalRefreshMessage();
		jpmMessage.decode(QUOTE_MESSAGE_BYTES);
		assertEquals("decoded all MDEntries", 10, jpmMessage.noMDEntries.size());
		
	}
	
	@BeforeExperiment
	@BeforeRep
	public void beforeRep() {
		jpmMessage = new JPMMarketDataIncrementalRefreshMessage();
		jpmSocketMessage = new SocketMessageObject(JPM_BYTES);
		
		currenexMessage = new CurrenexMarketDataIncrementalRefreshMessage();
		currenexSocketMessage = new SocketMessageObject(CURRENEX_BYTES);
		
		msdwQuoteMessage = new MSDWQuoteMessage();
		msdwSocketMessage = new SocketMessageObject(MSDW_BYTES);
	}
	
	
	@Benchmark
	public void decodeJPMQuote(int reps) {		
		for (int i = 0; i < reps; i++) {
			jpmMessage.process(jpmSocketMessage);			
		}		
	}
	
	@Benchmark
	public void decodeCurrenexQuote(int reps) {		
		for (int i = 0; i < reps; i++) {
			currenexMessage.process(currenexSocketMessage);
		}		
	}
	
	@Benchmark
	public void decodeMSDWQuote(int reps) {		
		for (int i = 0; i < reps; i++) {
			msdwQuoteMessage.process(msdwSocketMessage);
		}		
	}
	
	

}
